[package]
authors = ['BitGreen <https://bitgreen.org>']
edition = '2018'
homepage = 'https://bitgreen.org'
license = 'Unlicense'
name = 'pallet-bonds'
description = "Module to manage the Bonds"
repository = 'https://github.com/bitgreen/bitg-node'
version = '0.1.0'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
frame-support = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
frame-system = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
sp-std = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
sp-runtime = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
sp-io = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
primitive-types =  { default-features = false, version = '0.7.3'}
rand =  { default-features = false, version = '0.7.3'}
hex = { default-features = false, version = '0.4'}
bs58 = { default-features = false, version = '0.4.0',features=['alloc']}
pallet-balances = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", default-features = false }
scale-info = { version = "2.0.0", default-features = false, features = ["derive"] }

pallet-assets = { path = '../assets'}

[dev-dependencies]
serde = { version = "1.0.119" }

[features]
default = ['std']
std = [
    'codec/std',
    'scale-info/std',
    'frame-support/std',
    'frame-system/std',
    'sp-std/std',
    'sp-runtime/std',
    'sp-io/std',
    'sp-core/std',
    'hex/std',
    'bs58/std',
    'primitive-types/std',
    'pallet-assets/std',
    'pallet-balances/std',
]
